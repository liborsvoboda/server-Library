function PxLoaderVideo(url,tags,priority){var self=this;var loader=null;this.readyEventName="canplaythrough";try{this.vid=new Video}catch(e){this.vid=document.createElement("video")}this.tags=tags;this.priority=priority;var onReadyStateChange=function(){if(self.vid.readyState!==4){return}removeEventHandlers();loader.onLoad(self)};var onLoad=function(){removeEventHandlers();loader.onLoad(self)};var onError=function(){removeEventHandlers();loader.onError(self)};var removeEventHandlers=function(){self.unbind("load",onLoad);self.unbind(self.readyEventName,onReadyStateChange);self.unbind("error",onError)};this.start=function(pxLoader){loader=pxLoader;self.bind("load",onLoad);self.bind(self.readyEventName,onReadyStateChange);self.bind("error",onError);self.bind("suspend",onLoad);self.vid.src=url;self.vid.load()};this.checkStatus=function(){if(self.vid.readyState!==4){return}removeEventHandlers();loader.onLoad(self)};this.onTimeout=function(){removeEventHandlers();if(self.vid.readyState!==4){loader.onLoad(self)}else{loader.onTimeout(self)}};this.getName=function(){return url};this.bind=function(eventName,eventHandler){if(self.vid.addEventListener){self.vid.addEventListener(eventName,eventHandler,false)}else if(self.vid.attachEvent){self.vid.attachEvent("on"+eventName,eventHandler)}};this.unbind=function(eventName,eventHandler){if(self.vid.removeEventListener){self.vid.removeEventListener(eventName,eventHandler,false)}else if(self.vid.detachEvent){self.vid.detachEvent("on"+eventName,eventHandler)}}}PxLoader.prototype.addVideo=function(url,tags,priority){var videoLoader=new PxLoaderVideo(url,tags,priority);this.add(videoLoader);return videoLoader.vid};if(typeof define==="function"&&define.amd){define("PxLoaderVideo",[],function(){return PxLoaderVideo})}